{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name"
		},
		"AzureSqlDatabase": {
			"type": "string"
		},
		"AzureBlobStorage": {
			"type": "string"
		},
		"AzureSqlDWH": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GetTableListAndTriggerCopyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupTableList",
						"description": "Retrive the Table list from Azure SQL database",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' and TABLE_SCHEMA = 'SalesLT' and TABLE_NAME <> 'ProductModel'"
							},
							"dataset": {
								"referenceName": "AzureSqlDataset",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "TriggerCopy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LookupTableList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "IterateAndCopySQLTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"tableList": {
									"value": "@activity('LookupTableList').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDataset')]",
				"[concat(variables('factoryId'), '/pipelines/IterateAndCopySQLTables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDatabase')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "AddressEMP",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Emp]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IterateAndCopySQLTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IterateSQLTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tablelist",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data From SQLdb",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM [@{item().TABLE_SCHEMA}].[@{item().TABLE_NAME}]",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"preCopyScript": {
												"value": "TRUNCATE TABLE [@{item().TABLE_SCHEMA}].[@{item().TABLE_NAME}]",
												"type": "Expression"
											},
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "[parameters('AzureBlobStorage')]",
												"type": "LinkedServiceReference"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlDataset",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlDWHDataset",
											"type": "DatasetReference",
											"parameters": {
												"DWTableName": {
													"value": "[[@{item().TABLE_SCHEMA}].[@{item().TABLE_NAME}]",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"tableList": {
						"type": "array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDataset')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDWHDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWHDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDWH')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DWTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().DWTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		}
	]
}